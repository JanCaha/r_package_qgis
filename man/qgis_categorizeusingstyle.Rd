% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qgis_categorizeusingstyle.R
\name{qgis_categorizeusingstyle}
\alias{qgis_categorizeusingstyle}
\title{QGIS algorithm Create categorized renderer from styles}
\usage{
qgis_categorizeusingstyle(
  INPUT = qgisprocess::qgis_default_value(),
  FIELD = qgisprocess::qgis_default_value(),
  STYLE = qgisprocess::qgis_default_value(),
  CASE_SENSITIVE = qgisprocess::qgis_default_value(),
  TOLERANT = qgisprocess::qgis_default_value(),
  NON_MATCHING_CATEGORIES = qgisprocess::qgis_default_value(),
  NON_MATCHING_SYMBOLS = qgisprocess::qgis_default_value(),
  ...,
  .complete_output = TRUE
)
}
\arguments{
\item{INPUT}{\code{vector} - Input layer. Path to a vector layer.}

\item{FIELD}{\code{expression} - Categorize using expression. A valid QGIS expression string, e.g "road_name" = 'MAIN RD'.}

\item{STYLE}{\code{file} - Style database (leave blank to use saved symbols). Path to a file.}

\item{CASE_SENSITIVE}{\code{boolean} - Use case-sensitive match to symbol names. 1 for true/yes. 0 for false/no.}

\item{TOLERANT}{\code{boolean} - Ignore non-alphanumeric characters while matching. 1 for true/yes. 0 for false/no.}

\item{NON_MATCHING_CATEGORIES}{\code{sink} - Non-matching categories. Path for new vector layer.}

\item{NON_MATCHING_SYMBOLS}{\code{sink} - Non-matching symbol names. Path for new vector layer.}

\item{...}{further parameters passed to \code{qgisprocess::qgis_run_algorithm()}}

\item{.complete_output}{logical specifing if complete out of \code{qgisprocess::qgis_run_algorithm()} should be used (\code{TRUE}) or first output (most likely the main) should read (\code{FALSE}). Default value is \code{TRUE}.}
}
\description{
QGIS Algorithm provided by QGIS (native c++) Create categorized renderer from styles (native:categorizeusingstyle)
}
\details{
\subsection{Outputs description}{
\itemize{
\item OUTPUT - outputVector - Categorized layer
\item NON_MATCHING_CATEGORIES - outputVector - Non
\item NON_MATCHING_SYMBOLS - outputVector - Non
}
}
}
