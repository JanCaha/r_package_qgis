% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qgis_aggregate.R
\name{qgis_aggregate}
\alias{qgis_aggregate}
\title{QGIS algorithm - Aggregate}
\usage{
qgis_aggregate(
  INPUT = qgisprocess:::qgis_default_value(),
  GROUP_BY = qgisprocess:::qgis_default_value(),
  AGGREGATES = qgisprocess:::qgis_default_value(),
  OUTPUT = qgisprocess:::qgis_default_value(),
  ...,
  .complete_output = .complete_output_option(),
  .quiet = .quiet_option(),
  .messages = .message_option()
)
}
\arguments{
\item{INPUT}{\code{source} - Input layer. Path to a vector layer.}

\item{GROUP_BY}{\code{expression} - Group by expression (NULL to group all features). A valid QGIS expression string, e.g "road_name" = 'MAIN RD'.}

\item{AGGREGATES}{\code{aggregates} - Aggregates. .}

\item{OUTPUT}{\code{sink} - Aggregated. Path for new vector layer.}

\item{...}{further parameters passed to \code{qgisprocess::qgis_run_algorithm()}}

\item{.complete_output}{logical specifying if complete out of \code{qgisprocess::qgis_run_algorithm()} should be used (\code{TRUE}) or first output (most likely the main) should read (\code{FALSE}). Default value is \code{TRUE}.}

\item{.quiet}{logical specifying if parameter \code{.quiet} for \code{qgisprocess::qgis_run_algorithm()} Default value is \code{TRUE}.}

\item{.messages}{logical specifying if messages from \code{qgisprocess::qgis_run_algorithm()} should be printed (\code{TRUE}) or not (\code{FALSE}). Default value is \code{FALSE}.}
}
\description{
QGIS Algorithm provided by QGIS (native c++) Aggregate (native:aggregate). Aggregates features based on a group by expression, combining geometries (if present) into one multipart geometry for each group. This algorithm takes a vector or table layer and aggregates features based on a group by expression. Features for which group by expression return the same value are grouped together.  It is possible to group all source features together using constant value in group by parameter, example: NULL.  It is also possible to group features using multiple fields using Array function, example: Array("Field1", "Field2").  Geometries (if present) are combined into one multipart geometry for each group.  Output attributes are computed depending on each given aggregate definition.
}
\details{
\subsection{Outputs description}{
\itemize{
\item OUTPUT - outputVector - Aggregated
}
}
}
