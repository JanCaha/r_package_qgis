% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qgis_knearestconcavehull.R
\name{qgis_knearestconcavehull}
\alias{qgis_knearestconcavehull}
\title{QGIS algorithm - Concave hull (k-nearest neighbor)}
\usage{
qgis_knearestconcavehull(
  INPUT = qgisprocess:::qgis_default_value(),
  KNEIGHBORS = qgisprocess:::qgis_default_value(),
  FIELD = qgisprocess:::qgis_default_value(),
  OUTPUT = qgisprocess:::qgis_default_value(),
  ...,
  .complete_output = .complete_output_option(),
  .quiet = .quiet_option(),
  .messages = .message_option()
)
}
\arguments{
\item{INPUT}{\code{source} - Input layer. Path to a vector layer.}

\item{KNEIGHBORS}{\code{number} - Number of neighboring points to consider (a lower number is more concave, a higher number is smoother). A numeric value. field:FIELD_NAME to use a data defined value taken from the FIELD_NAME field. expression:SOME EXPRESSION to use a data defined value calculated using a custom QGIS expression.}

\item{FIELD}{\code{field} - Field (set if creating concave hulls by class). The name of an existing field. ; delimited list of existing field names.}

\item{OUTPUT}{\code{sink} - Concave hull. Path for new vector layer.}

\item{...}{further parameters passed to \code{qgisprocess::qgis_run_algorithm()}}

\item{.complete_output}{logical specifying if complete out of \code{qgisprocess::qgis_run_algorithm()} should be used (\code{TRUE}) or first output (most likely the main) should read (\code{FALSE}). Default value is \code{TRUE}.}

\item{.quiet}{logical specifying if parameter \code{.quiet} for \code{qgisprocess::qgis_run_algorithm()} Default value is \code{TRUE}.}

\item{.messages}{logical specifying if messages from \code{qgisprocess::qgis_run_algorithm()} should be printed (\code{TRUE}) or not (\code{FALSE}). Default value is \code{FALSE}.}
}
\description{
QGIS Algorithm provided by QGIS Concave hull (k-nearest neighbor) (qgis:knearestconcavehull). Creates a concave hull using the k-nearest neighbor algorithm. This algorithm generates a concave hull polygon from a set of points. If the input layer is a line or polygon layer, it will use the nodes. The number of neighbours to consider determines the concaveness of the output polygon. A lower number will result in a concave hull that follows the points very closely, while a higher number will have a smoother shape. The minimum number of neighbour points to consider is 3. A value equal to or greater than the number of points will result in a convex hull. If a field is selected, the algorithm will group the features in the input layer using unique values in that field and generate individual polygons in the output layer for each group.
}
\details{
\subsection{Outputs description}{
\itemize{
\item OUTPUT - outputVector - Concave hull
}
}
}
