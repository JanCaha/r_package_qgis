% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/saga_supervisedclassificationforgrids.R
\name{saga_supervisedclassificationforgrids}
\alias{saga_supervisedclassificationforgrids}
\title{QGIS algorithm Supervised classification for grids}
\usage{
saga_supervisedclassificationforgrids(
  GRIDS = qgisprocess:::qgis_default_value(),
  NORMALISE = qgisprocess:::qgis_default_value(),
  CLASSES = qgisprocess:::qgis_default_value(),
  QUALITY = qgisprocess:::qgis_default_value(),
  TRAINING = qgisprocess:::qgis_default_value(),
  TRAINING_CLASS = qgisprocess:::qgis_default_value(),
  FILE_LOAD = qgisprocess:::qgis_default_value(),
  FILE_SAVE = qgisprocess:::qgis_default_value(),
  METHOD = qgisprocess:::qgis_default_value(),
  THRESHOLD_DIST = qgisprocess:::qgis_default_value(),
  THRESHOLD_ANGLE = qgisprocess:::qgis_default_value(),
  THRESHOLD_PROB = qgisprocess:::qgis_default_value(),
  RELATIVE_PROB = qgisprocess:::qgis_default_value(),
  WTA_0 = qgisprocess:::qgis_default_value(),
  WTA_1 = qgisprocess:::qgis_default_value(),
  WTA_2 = qgisprocess:::qgis_default_value(),
  WTA_3 = qgisprocess:::qgis_default_value(),
  WTA_4 = qgisprocess:::qgis_default_value(),
  WTA_5 = qgisprocess:::qgis_default_value(),
  ...,
  .complete_output = .complete_output_option(),
  .quiet = .quiet_option(),
  .messages = .message_option()
)
}
\arguments{
\item{GRIDS}{\code{multilayer} - Features. .}

\item{NORMALISE}{\code{boolean} - Normalise. 1 for true/yes. 0 for false/no.}

\item{CLASSES}{\code{rasterDestination} - Classification. Path for new raster layer.}

\item{QUALITY}{\code{rasterDestination} - Quality. Path for new raster layer.}

\item{TRAINING}{\code{source} - Training Areas. Path to a vector layer.}

\item{TRAINING_CLASS}{\code{source} - Class Identifier. Path to a vector layer.}

\item{FILE_LOAD}{\code{file} - Load Statistics from File.... Path to a file.}

\item{FILE_SAVE}{\code{file} - Save Statistics to File.... Path to a file.}

\item{METHOD}{\code{enum}  of \verb{("[0] Binary Encoding", "[1] Parallelepiped", "[2] Minimum Distance", "[3] Mahalanobis Distance", "[4] Maximum Likelihood", "[5] Spectral Angle Mapping", "[6] Winner Takes All")} - Method. Number of selected option, e.g. '1'. Comma separated list of options, e.g. '1,3'.}

\item{THRESHOLD_DIST}{\code{number} - Distance Threshold. A numeric value.}

\item{THRESHOLD_ANGLE}{\code{number} - Spectral Angle Threshold (Degree). A numeric value.}

\item{THRESHOLD_PROB}{\code{number} - Probability Threshold. A numeric value.}

\item{RELATIVE_PROB}{\code{enum}  of \verb{("[0] absolute", "[1] relative")} - Probability Reference. Number of selected option, e.g. '1'. Comma separated list of options, e.g. '1,3'.}

\item{WTA_0}{\code{boolean} - Binary Encoding. 1 for true/yes. 0 for false/no.}

\item{WTA_1}{\code{boolean} - Parallelepiped. 1 for true/yes. 0 for false/no.}

\item{WTA_2}{\code{boolean} - Minimum Distance. 1 for true/yes. 0 for false/no.}

\item{WTA_3}{\code{boolean} - Mahalanobis Distance. 1 for true/yes. 0 for false/no.}

\item{WTA_4}{\code{boolean} - Maximum Likelihood. 1 for true/yes. 0 for false/no.}

\item{WTA_5}{\code{boolean} - Spectral Angle Mapping. 1 for true/yes. 0 for false/no.}

\item{...}{further parameters passed to \code{qgisprocess::qgis_run_algorithm()}}

\item{.complete_output}{logical specifying if complete out of \code{qgisprocess::qgis_run_algorithm()} should be used (\code{TRUE}) or first output (most likely the main) should read (\code{FALSE}). Default value is \code{TRUE}.}

\item{.quiet}{logical specifying if parameter \code{.quiet} for \code{qgisprocess::qgis_run_algorithm()} Default value is \code{TRUE}.}

\item{.messages}{logical specifying if messages from \code{qgisprocess::qgis_run_algorithm()} should be printed (\code{TRUE}) or not (\code{FALSE}). Default value is \code{FALSE}.}
}
\description{
QGIS Algorithm provided by SAGA Supervised classification for grids (saga:supervisedclassificationforgrids)
}
\details{
\subsection{Outputs description}{
\itemize{
\item CLASSES - outputRaster - Classification
\item QUALITY - outputRaster - Quality
}
}
}
