% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qgis_joinbynearest.R
\name{qgis_joinbynearest}
\alias{qgis_joinbynearest}
\title{QGIS algorithm - Join attributes by nearest}
\usage{
qgis_joinbynearest(
  INPUT = qgisprocess:::qgis_default_value(),
  INPUT_2 = qgisprocess:::qgis_default_value(),
  FIELDS_TO_COPY = qgisprocess:::qgis_default_value(),
  DISCARD_NONMATCHING = qgisprocess:::qgis_default_value(),
  PREFIX = qgisprocess:::qgis_default_value(),
  NEIGHBORS = qgisprocess:::qgis_default_value(),
  MAX_DISTANCE = qgisprocess:::qgis_default_value(),
  OUTPUT = qgisprocess:::qgis_default_value(),
  NON_MATCHING = qgisprocess:::qgis_default_value(),
  ...,
  .complete_output = .complete_output_option(),
  .quiet = .quiet_option(),
  .messages = .message_option()
)
}
\arguments{
\item{INPUT}{\code{source} - Input layer. Path to a vector layer.}

\item{INPUT_2}{\code{source} - Input layer 2. Path to a vector layer.}

\item{FIELDS_TO_COPY}{\code{field} - Layer 2 fields to copy (leave empty to copy all fields). The name of an existing field. ; delimited list of existing field names.}

\item{DISCARD_NONMATCHING}{\code{boolean} - Discard records which could not be joined. 1 for true/yes. 0 for false/no. field:FIELD_NAME to use a data defined value taken from the FIELD_NAME field. expression:SOME EXPRESSION to use a data defined value calculated using a custom QGIS expression.}

\item{PREFIX}{\code{string} - Joined field prefix. String value. field:FIELD_NAME to use a data defined value taken from the FIELD_NAME field. expression:SOME EXPRESSION to use a data defined value calculated using a custom QGIS expression.}

\item{NEIGHBORS}{\code{number} - Maximum nearest neighbors. A numeric value. field:FIELD_NAME to use a data defined value taken from the FIELD_NAME field. expression:SOME EXPRESSION to use a data defined value calculated using a custom QGIS expression.}

\item{MAX_DISTANCE}{\code{distance} - Maximum distance. A numeric value. field:FIELD_NAME to use a data defined value taken from the FIELD_NAME field. expression:SOME EXPRESSION to use a data defined value calculated using a custom QGIS expression.}

\item{OUTPUT}{\code{sink} - Joined layer. Path for new vector layer.}

\item{NON_MATCHING}{\code{sink} - Unjoinable features from first layer. Path for new vector layer.}

\item{...}{further parameters passed to \code{qgisprocess::qgis_run_algorithm()}}

\item{.complete_output}{logical specifying if complete out of \code{qgisprocess::qgis_run_algorithm()} should be used (\code{TRUE}) or first output (most likely the main) should read (\code{FALSE}). Default value is \code{TRUE}.}

\item{.quiet}{logical specifying if parameter \code{.quiet} for \code{qgisprocess::qgis_run_algorithm()} Default value is \code{TRUE}.}

\item{.messages}{logical specifying if messages from \code{qgisprocess::qgis_run_algorithm()} should be printed (\code{TRUE}) or not (\code{FALSE}). Default value is \code{FALSE}.}
}
\description{
QGIS Algorithm provided by QGIS (native c++) Join attributes by nearest (native:joinbynearest). Joins a layer to another layer, using the closest features (nearest neighbors). This algorithm takes an input vector layer and creates a new vector layer that is an extended version of the input one, with additional attributes in its attribute table.  The additional attributes and their values are taken from a second vector layer, where features are joined by finding the closest features from each layer. By default only the single nearest feature is joined,but optionally the join can use the n-nearest neighboring features instead. If multiple features are found with identical distances these will all be returned (even if the total number of features exceeds the specified maximum feature count).  If a maximum distance is specified, then only features which are closer than this distance will be matched.  The output features will contain the selected attributes from the nearest feature, along with new attributes for the distance to the near feature, the index of the feature, and the coordinates of the closest point on the input feature (feature_x, feature_y) to the matched nearest feature, and the coordinates of the closet point on the matched feature (nearest_x, nearest_y).  This algorithm uses purely Cartesian calculations for distance, and does not consider geodetic or ellipsoid properties when determining feature proximity.
}
\details{
\subsection{Outputs description}{
\itemize{
\item JOINED_COUNT - outputNumber - Number of joined features from input table
\item NON_MATCHING - outputVector - Unjoinable features from first layer
\item OUTPUT - outputVector - Joined layer
\item UNJOINABLE_COUNT - outputNumber - Number of unjoinable features from input table
}
}
}
