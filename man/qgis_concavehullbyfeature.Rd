% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qgis_concavehullbyfeature.R
\name{qgis_concavehullbyfeature}
\alias{qgis_concavehullbyfeature}
\title{QGIS algorithm - Concave hull (by feature)}
\usage{
qgis_concavehullbyfeature(
  INPUT = qgisprocess:::qgis_default_value(),
  ALPHA = qgisprocess:::qgis_default_value(),
  HOLES = qgisprocess:::qgis_default_value(),
  OUTPUT = qgisprocess:::qgis_default_value(),
  ...,
  .complete_output = .complete_output_option(),
  .quiet = .quiet_option(),
  .messages = .message_option()
)
}
\arguments{
\item{INPUT}{\code{source} - Input layer. Path to a vector layer.}

\item{ALPHA}{\code{number} - Threshold (0-1, where 1 is equivalent with Convex Hull). A numeric value. field:FIELD_NAME to use a data defined value taken from the FIELD_NAME field. expression:SOME EXPRESSION to use a data defined value calculated using a custom QGIS expression.}

\item{HOLES}{\code{boolean} - Allow holes. 1 for true/yes. 0 for false/no. field:FIELD_NAME to use a data defined value taken from the FIELD_NAME field. expression:SOME EXPRESSION to use a data defined value calculated using a custom QGIS expression.}

\item{OUTPUT}{\code{sink} - Concave hulls. Path for new vector layer.}

\item{...}{further parameters passed to \code{qgisprocess::qgis_run_algorithm()}}

\item{.complete_output}{logical specifying if complete out of \code{qgisprocess::qgis_run_algorithm()} should be used (\code{TRUE}) or first output (most likely the main) should read (\code{FALSE}). Default value is \code{TRUE}.}

\item{.quiet}{logical specifying if parameter \code{.quiet} for \code{qgisprocess::qgis_run_algorithm()} Default value is \code{TRUE}.}

\item{.messages}{logical specifying if messages from \code{qgisprocess::qgis_run_algorithm()} should be printed (\code{TRUE}) or not (\code{FALSE}). Default value is \code{FALSE}.}
}
\description{
QGIS Algorithm provided by QGIS (native c++) Concave hull (by feature) (native:concavehullbyfeature). Calculates the concave hull for each feature in an input layer. This algorithm calculates the concave hull for each feature in an input layer.  A concave hull is a polygon which contains all the points of the input geometries, but is a better approximation than the convex hull to the area occupied by the input.  It is frequently used to convert a multi-point into a polygonal area which contains all the points from the input geometry.  See the 'Concave hull (by layer)' algorithm for a concave hull calculation which covers the whole layer or grouped subsets of features.
}
\details{
\subsection{Outputs description}{
\itemize{
\item OUTPUT - outputVector - Concave hulls
}
}
}
