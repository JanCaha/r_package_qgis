% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sagang_creategraticule.R
\name{sagang_creategraticule}
\alias{sagang_creategraticule}
\title{QGIS algorithm - Create graticule}
\usage{
sagang_creategraticule(
  GRATICULE_LINE = qgisprocess:::qgis_default_value(),
  GRATICULE_RECT = qgisprocess:::qgis_default_value(),
  TYPE = qgisprocess:::qgis_default_value(),
  EXTENT = qgisprocess:::qgis_default_value(),
  DIVISION_X = qgisprocess:::qgis_default_value(),
  DIVISION_Y = qgisprocess:::qgis_default_value(),
  ALIGNMENT = qgisprocess:::qgis_default_value(),
  ...,
  .complete_output = .complete_output_option(),
  .quiet = .quiet_option(),
  .messages = .message_option()
)
}
\arguments{
\item{GRATICULE_LINE}{\code{vectorDestination} - Graticule. Path for new vector layer.}

\item{GRATICULE_RECT}{\code{vectorDestination} - Graticule. Path for new vector layer.}

\item{TYPE}{\code{enum}  of \verb{("(0) Lines", "(1) Rectangles")} - Type. Number of selected option, e.g. '1'. Comma separated list of options, e.g. '1,3'.}

\item{EXTENT}{\code{source} - Extent. Path to a vector layer.}

\item{DIVISION_X}{\code{number} - Division Width. A numeric value. field:FIELD_NAME to use a data defined value taken from the FIELD_NAME field. expression:SOME EXPRESSION to use a data defined value calculated using a custom QGIS expression.}

\item{DIVISION_Y}{\code{number} - Division Height. A numeric value. field:FIELD_NAME to use a data defined value taken from the FIELD_NAME field. expression:SOME EXPRESSION to use a data defined value calculated using a custom QGIS expression.}

\item{ALIGNMENT}{\code{enum}  of \verb{("(0) bottom-left", "(1) top-left", "(2) bottom-right", "(3) top-right", "(4) centered")} - Alignment. Number of selected option, e.g. '1'. Comma separated list of options, e.g. '1,3'.}

\item{...}{further parameters passed to \code{qgisprocess::qgis_run_algorithm()}}

\item{.complete_output}{logical specifying if complete out of \code{qgisprocess::qgis_run_algorithm()} should be used (\code{TRUE}) or first output (most likely the main) should read (\code{FALSE}). Default value is \code{TRUE}.}

\item{.quiet}{logical specifying if parameter \code{.quiet} for \code{qgisprocess::qgis_run_algorithm()} Default value is \code{TRUE}.}

\item{.messages}{logical specifying if messages from \code{qgisprocess::qgis_run_algorithm()} should be printed (\code{TRUE}) or not (\code{FALSE}). Default value is \code{FALSE}.}
}
\description{
QGIS Algorithm provided by SAGA Next Gen Create graticule (sagang:creategraticule). ---------------- Arguments ----------------  GRATICULE_LINE: Graticule 	Argument type:	vectorDestination 	Acceptable values: 		- Path for new vector layer GRATICULE_RECT: Graticule 	Argument type:	vectorDestination 	Acceptable values: 		- Path for new vector layer TYPE: Type 	Default value:	0 	Argument type:	enum 	Available values: 		- 0: (0) Lines 		- 1: (1) Rectangles 	Acceptable values: 		- Number of selected option, e.g. '1' 		- Comma separated list of options, e.g. '1,3' EXTENT: Extent (optional) 	Argument type:	source 	Acceptable values: 		- Path to a vector layer DIVISION_X: Division Width 	Default value:	10 	Argument type:	number 	Acceptable values: 		- A numeric value 		- field:FIELD_NAME to use a data defined value taken from the FIELD_NAME field 		- expression:SOME EXPRESSION to use a data defined value calculated using a custom QGIS expression DIVISION_Y: Division Height 	Default value:	10 	Argument type:	number 	Acceptable values: 		- A numeric value 		- field:FIELD_NAME to use a data defined value taken from the FIELD_NAME field 		- expression:SOME EXPRESSION to use a data defined value calculated using a custom QGIS expression ALIGNMENT: Alignment 	Default value:	0 	Argument type:	enum 	Available values: 		- 0: (0) bottom-left 		- 1: (1) top-left 		- 2: (2) bottom-right 		- 3: (3) top-right 		- 4: (4) centered 	Acceptable values: 		- Number of selected option, e.g. '1' 		- Comma separated list of options, e.g. '1,3'
}
\details{
\subsection{Outputs description}{
\itemize{
\item GRATICULE_LINE - outputVector - Graticule
\item GRATICULE_RECT - outputVector - Graticule
}
}
}
